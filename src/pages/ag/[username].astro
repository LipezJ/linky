---
import DarkToggle from "@/components/DarkToggle.astro"
import Blank from "@/layouts/Blank.astro"
import { Aggregator } from "@/lib/aggregator"
import { Templates } from "@/lib/template"
import type { Template } from "@/lib/types/templates.types"

const { username } = Astro.params
const customTemplate = Astro.url.searchParams.get("tmpl")

if (!username) return Astro.redirect("/404")

const data = await Aggregator.get(username, Astro.cookies)
if (!data) return Astro.redirect("/404")

let t: Template

if (customTemplate) {
	t = Templates.getTemplate(customTemplate)
	t = t || Templates.getTemplate("default")
} else {
	t = Templates.getTemplate(data.addons.template ?? "default")
}
---

<Blank title=`${username} links` className={t.super}>
	<div class:list={t.background}></div>
	<header class:list={t.header.self}>
		<div class:list={t.header.avatar_container}>
			{
				data.avatar_url ? (
					<img class:list={t.header.avatar} src={data.avatar_url} alt={username} />
				) : (
					<div
						class:list={`${t.header.avatar} relative overflow-hidden rounded-full bg-gray-100 dark:bg-gray-600`}
					>
						<svg
							class:list={`${t.header.avatar} absolute text-gray-400`}
							fill="currentColor"
							viewBox="0 0 20 20"
							xmlns="http://www.w3.org/2000/svg"
						>
							<path
								fill-rule="evenodd"
								d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z"
								clip-rule="evenodd"
							/>
						</svg>
					</div>
				)
			}
		</div>
		<h1 class:list={t.header.name}>{username}</h1>
		<div class:list={t.header.bio}>
			{data.addons.bio}
		</div>
	</header>
	<section class:list={t.cont.self}>
		<article class:list={t.cont.links.self}>
			<ul class:list={t.cont.links.container}>
				{
					data.links.map(({ link, text }) => (
						<li class:list={t.cont.links.card}>
							<a
								href={link}
								target="_blank"
								rel="noopener noreferrer"
								class:list={t.cont.links.link}
							>
								{text}
							</a>
						</li>
					))
				}
			</ul>
		</article>
		<article class:list={t.cont.socials.self}>
			<ul class:list={t.cont.socials.container}>
				{
					Object.entries(data.addons.socials).map(([name, link]) => {
						if (link === "") return null
						return (
							<li class:list={t.cont.socials.card}>
								<a
									href={`${Templates.getSocialsLink(name, link)}`}
									target="_blank"
									rel="noopener noreferrer"
									class:list={t.cont.socials.link}
								>
									<i class:list={`${Templates.getSocialsIcons(name)} ${t.cont.socials.icon}`} />
								</a>
							</li>
						)
					})
				}
			</ul>
		</article>
	</section>
	<footer class:list={t.footer.self}>
		<DarkToggle className={t.footer.toogle_theme} />
		<span class:list={t.footer.text}>
			Create your own link page on
			<a href="/" class:list={t.footer.link}> Linky </a>
		</span>
	</footer>
</Blank>
